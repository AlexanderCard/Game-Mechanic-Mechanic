{"version":3,"sources":["logo.svg","listItems.js","test.gif","MechanicsTable.js","Page.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","nested2","NestedList","classes","React","useState","openPE","setOpenPE","openME","setOpenME","handleClickPE","handleClickME","List","component","aria-labelledby","className","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","useRowStyles","borderBottom","nested3","DrawArea","props","tool","setTool","lines","setLines","isDrawing","useRef","Paper","variant","square","color","height","onMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","onMousemove","point","lastLine","length","concat","splice","onMouseup","map","line","i","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","value","onBlur","Row","row","setRow","rows","handleInputChange","name","prevRows","r1","id","Fragment","TableRow","TableCell","IconButton","aria-label","size","onDelete","scope","ThemeProvider","TextField","margin","label","placeholder","fullWidth","multiline","defaultValue","pre","post","MechanicsTable","removeRow","tempRows","index","indexOf","open","setOpen","open2","setOpen2","open3","setOpen3","rowID","setRowID","TableContainer","Table","TableHead","align","style","VerticalAlignTop","Typography","paddingBottom","paddingTop","colSpan","InputProps","readOnly","Button","n","pr","po","gameplayExperiences","gameplayExperienceDescription","src","match3","TableBody","console","log","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","drawerWidth","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","flexDirection","fixedHeight","table","tableLayout","menu","menuItem","selectMenu","TabPanel","children","other","role","hidden","Box","p","a11yProps","CharacterSheetRow","setFunction","description","KeyChallengeRow","LevelsRow","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","LevelMechanicsRow","level","mechanics","handleChange","FormControl","InputLabel","htmlFor","Select","multiple","onChange","input","Input","renderValue","selected","chips","Chip","chip","mechanic","MenuItem","mechanicsDescription","MechanicsGameplayExperience","aspect","experience","GameplayExperienceQuestions","gameplayExperience","question","chosen","selections","Page","setValue","mechanicsRows","setMechanicsRow","characterRows","setCharacterRow","keyChallengeRows","setKeyChallengeRow","levelRows","setLevelRow","levelName","mechanicNames","levelMechanicsRows","setGameplayExperiences","addRow","oldRows","newRow","state","image1","image2","genre","targetPlatform","topic","goal","mainCharacters","gameplayFlow","playerCharacter","playerActions","uniqueness","importantScene","fictionalElements","backgroundStory","majorCharacters","finishthegame","keyChallenges","fictionalAdvancement","levels","gameMechanics","gameplayeEXP","playerExperience","educationalGoal","audience","platformAndTools","CssBaseline","AppBar","clsx","Toolbar","Tabs","event","newValue","Tab","Grid","direction","justify","Drawer","Divider","Container","textAlign","gutterBottom","border","item","xs","borderLeft","thisisaclass","App","createMuiTheme","type","overrides","MuiSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45d30bae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    nested2: {\r\n      paddingLeft: theme.spacing(8),\r\n    },\r\n  }));\r\n\r\nexport default function NestedList() {\r\n    const classes = useStyles();\r\n    const [openPE, setOpenPE] = React.useState(false);\r\n    const [openME, setOpenME] = React.useState(false);\r\n\r\n    const handleClickPE = () => {\r\n      setOpenPE(!openPE);\r\n    };\r\n\r\n    const handleClickME = () => {\r\n        setOpenME(!openME);\r\n    };\r\n  \r\n    return (\r\n      <List\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n        className={classes.root}\r\n      >\r\n\r\n<ListItem button onClick={handleClickME}> \r\n          <ListItemText primary=\"Executive Summary\" />\r\n          {openME ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={openPE} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemText primary=\"Name and Premise\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemText primary=\"Theme\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemText primary=\"Key Points\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n\r\n        <ListItem button onClick={handleClickME}> \r\n          <ListItemText primary=\"Game Description\" />\r\n          {openME ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={openPE} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemText primary=\"Background and Characters\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemText primary=\"Levels\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemText primary=\"Game Mechanics\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n\r\n        <ListItem button onClick={handleClickME}> \r\n          <ListItemText primary=\"Design Goals\" />\r\n          {openME ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={openME} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            \r\n        <ListItem button onClick={handleClickPE} className={classes.nested}>\r\n          <ListItemText primary=\"Player Experience\" />\r\n          {openPE ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={openPE} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Key Moment Pacing\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Player Goal\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Goal Challenge\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Player Reward\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Player Failure\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Failure Consequences\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Experience Focus\" />\r\n            </ListItem>\r\n            <ListItem button className={classes.nested2}>\r\n              <ListItemText primary=\"Avatar Control\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n        <ListItem button onClick={handleClickPE} className={classes.nested}>\r\n          <ListItemText primary=\"Gameplay Experience\" />\r\n          {openPE ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        </List>\r\n        </Collapse>\r\n\r\n      </List>\r\n    );\r\n  }","export default __webpack_public_path__ + \"static/media/test.d7a5cce0.gif\";","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ArrowDropDownCircle, VerticalAlignTop } from \"@material-ui/icons\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField'; \r\nimport match3 from './test.gif'\r\nimport {\r\n  fade,\r\n  ThemeProvider,\r\n  withStyles,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\r\n\r\n\r\n \r\n\r\nconst useRowStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n  nested3: {\r\n    paddingLeft: theme.spacing(8),\r\n  },\r\n  nested2: {\r\n    paddingLeft: theme.spacing(8),\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction createData(name, pre, post) {\r\n  return {\r\n    name,\r\n    pre,\r\n    post,\r\n  };\r\n}\r\n\r\nfunction DrawArea(props) {\r\n  const [tool, setTool] = React.useState('pen');\r\n  const [lines, setLines] = React.useState([]);\r\n  const isDrawing = React.useRef(false);\r\n  \r\n  const handleMouseDown = (e) => {\r\n    isDrawing.current = true;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    setLines([...lines, { tool, points: [pos.x, pos.y] }]);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    // no drawing - skipping\r\n    if (!isDrawing.current) {\r\n      return;\r\n    }\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n    let lastLine = lines[lines.length - 1];\r\n    // add point\r\n    lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n\r\n    // replace last\r\n    lines.splice(lines.length - 1, 1, lastLine);\r\n    setLines(lines.concat());\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDrawing.current = false;\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" square color=\"#dddddd\">\r\n      <Stage\r\n        width={300}\r\n        height={200}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n      >\r\n        <Layer>\r\n          {lines.map((line, i) => (\r\n            <Line\r\n              key={i}\r\n              points={line.points}\r\n              stroke=\"#df4b26\"\r\n              strokeWidth={5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n              globalCompositeOperation={\r\n                line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n        </Layer>\r\n      </Stage>\r\n      <select\r\n        value={tool}\r\n        onBlur={(e) => {\r\n          setTool(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"pen\">Pen</option>\r\n        <option value=\"eraser\">Eraser</option>\r\n      </select>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row, setRow, rows } = props;\r\n  const classes = useRowStyles();\r\n\r\n  const handleInputChange = e => {\r\n    const {name, value} = e.target\r\n    setRow( prevRows => (prevRows.map((r1) => r1.id === row.id? {...r1, [name]: value}: r1 )\r\n    )\r\n  )  \r\n}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"delete row\" size=\"small\" onClick={() => row.onDelete(row)}>\r\n          <DeleteIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <ThemeProvider >\r\n            <TextField\r\n              className={classes.margin}\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              id=\"mui-theme-provider-outlined-input\"\r\n              placeholder=\"What is the Mechanic's name?\"\r\n              fullWidth\r\n              multiline\r\n              name='name'\r\n              defaultValue={row.name}\r\n              onBlur={handleInputChange}\r\n            ></TextField>\r\n          </ThemeProvider>\r\n        </TableCell>\r\n        <TableCell scope=\"row\"><ThemeProvider >\r\n          <TextField\r\n            className={classes.margin}\r\n            label=\"IF\"\r\n            variant=\"outlined\"\r\n            id=\"mui-theme-provider-outlined-input\"\r\n            placeholder=\"What triggers the mechanic?\"\r\n            fullWidth\r\n            multiline\r\n            name='pre'\r\n            defaultValue={row.pre}\r\n            onBlur={handleInputChange}\r\n          ></TextField>\r\n        </ThemeProvider></TableCell>\r\n        <TableCell ><ThemeProvider >\r\n          <TextField\r\n            className={classes.margin}\r\n            label=\"THEN\"\r\n            variant=\"outlined\"\r\n            id=\"mui-theme-provider-outlined-input\"\r\n            placeholder=\"What is the effect of the mechanic triggering?\"\r\n            fullWidth\r\n            multiline\r\n            name='post'\r\n            defaultValue={row.post}\r\n            onBlur={handleInputChange}\r\n          ></TextField>\r\n        </ThemeProvider></TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell></TableCell>\r\n        <TableCell></TableCell>\r\n        <TableCell width=\"30%\"><DrawArea/></TableCell>\r\n        <TableCell width=\"30%\"><DrawArea/></TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    pre: PropTypes.string.isRequired,\r\n    post: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\n\r\n\r\nexport default function MechanicsTable(props) {\r\n  const removeRow = (id) => {\r\n    var tempRows = [...rows];\r\n    const index = tempRows.indexOf(id);\r\n    if (index !== -1) {\r\n      tempRows.splice(index, 1);\r\n    }\r\n    setRow(rows= [...tempRows])\r\n  };\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  const updateRow = () => {\r\n    setRow()\r\n  };\r\n\r\n  const [rowID, setRowID] = useState(1)\r\n  const { rows } = props;\r\n  const { setRow } = props;\r\n\r\n  const addRow = () => {\r\n    setRowID(rowID => rowID + 1)\r\n    setRow(rows => [\r\n      ...rows,\r\n      {\r\n        id: rowID,\r\n        name: \"\",\r\n        pre: '',\r\n        post: '',\r\n        gameplayExperiences: [],\r\n        gameplayExperienceDescription: \"\",\r\n        onDelete: removeRow\r\n      }\r\n    ])\r\n  };\r\n\r\n  const addRowElement = (n, pr, po) => {\r\n    setRowID(rowID => rowID + 1)\r\n    setRow(rows => [\r\n      ...rows,\r\n      {\r\n        id: rowID,\r\n        name: n,\r\n        pre: pr,\r\n        post: po,\r\n        gameplayExperiences: [],\r\n        gameplayExperienceDescription: \"\",\r\n        onDelete: removeRow\r\n      }\r\n    ])\r\n  };\r\n\r\n  return (\r\n    \r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell width=\"5%\"></TableCell>\r\n            <TableCell width=\"30%\">Mechanic</TableCell>\r\n            <TableCell width=\"30%\" align=\"right\">If</TableCell>\r\n            <TableCell width=\"30%\" align=\"right\">Then</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableRow>\r\n          <TableCell>\r\n          </TableCell>\r\n          <TableCell style={{VerticalAlignTop}}><IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <Typography>Hide Mechanic Browser</Typography> : <Typography>Show Mechanic Browser</Typography>}\r\n          </IconButton></TableCell>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemText primary=\"Tile Changes\" onClick={() => setOpen2(!open2)} />\r\n              </ListItem>\r\n              <Collapse in={open2} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  <ListItem button className={classes.nested2}>\r\n                    <ListItemText primary=\"Remove Tiles\"  onClick={() => setOpen3(!open3)}/>\r\n                  </ListItem>\r\n                  <Collapse in={open3} timeout=\"auto\" className={classes.nested3} unmountOnExit>\r\n                  <Table aria-label=\"collapsible table\" className={classes.nested3}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell width=\"30%\"><ThemeProvider >\r\n                          <TextField\r\n                            className={classes.margin}\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            fullWidth\r\n                            multiline\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            defaultValue=\"Remove Tiles\"\r\n                          ></TextField>\r\n                        </ThemeProvider></TableCell>\r\n                        <TableCell width=\"30%\"><ThemeProvider >\r\n                          <TextField\r\n                            className={classes.margin}\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            fullWidth\r\n                            multiline\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            defaultValue=\"If three boxes are in a row or column\"\r\n                          ></TextField>\r\n                        </ThemeProvider></TableCell>\r\n                        <TableCell width=\"30%\"><ThemeProvider >\r\n                          <TextField\r\n                            className={classes.margin}\r\n                            label=\"then\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            fullWidth\r\n                            multiline\r\n                            InputProps={{\r\n                              readOnly: true,\r\n                            }}\r\n                            defaultValue=\"Then the boxes are removed from the game\"\r\n                          ></TextField>\r\n                        </ThemeProvider></TableCell>\r\n\r\n                      </TableRow>\r\n                      <TableRow className={classes.nested3}>\r\n                        <TableCell>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {addRowElement(\"Remove Tiles\", \"If three boxes are in a row or column\", \"Then the boxes are removed from the game\")}}>Select Mechanic</Button>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <img src={match3} width=\"100%\"/>\r\n                        </TableCell>\r\n                        <TableCell>\r\n\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    </Table>\r\n                    </Collapse>\r\n                    <ListItem button className={classes.nested2}>\r\n                      <ListItemText primary=\"Modify Tile\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested2}>\r\n                      <ListItemText primary=\"Combine Tiles\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested2}>\r\n                      <ListItemText primary=\"Create Tile\" />\r\n                    </ListItem>\r\n                  \r\n                </List>\r\n              </Collapse>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemText primary=\"Player Interaction\" />\r\n              </ListItem>\r\n              <ListItem button className={classes.nested}>\r\n                <ListItemText primary=\"Automation\" />\r\n              </ListItem>\r\n            </List>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n        <TableBody>\r\n          {console.log(rows),\r\n          rows.map((row) => (\r\n            row.onDelete = removeRow,\r\n            <Row key={row.id} row={row} setRow={setRow} rows={rows}/>\r\n          ))}\r\n        <TableRow>\r\n          <TableCell/>\r\n          <TableCell>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={addRow}>Add Mechanic</Button>\r\n            </TableCell>\r\n        </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport NestedList, { playerExperience, mechanics } from './listItems';\r\nimport PropTypes from 'prop-types';\r\nimport MechanicsTable from './MechanicsTable';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { borders } from '@material-ui/system';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport { sizing } from '@material-ui/system';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport {\r\n    fade,\r\n    ThemeProvider,\r\n    withStyles,\r\n    createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { NoEncryption } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    table: {\r\n        width: 'auto',\r\n        tableLayout: 'auto'\r\n    },\r\n    menu:{\r\n        width: 200,\r\n      },\r\n      menuItem: {\r\n        whiteSpace: \"normal\",\r\n      },\r\n    selectMenu:{\r\n        whiteSpace: \"unset\",\r\n    },\r\n}));\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst drawerWidth = 0;\r\n\r\n\r\nfunction CharacterSheetRow(props) {\r\n    const { row } = props;\r\n    const { rows } = props;\r\n    const { setFunction } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"delete row\" size=\"small\" onClick={() => row.onDelete(row.id, rows, setFunction)}>\r\n                        {open ? <DeleteIcon /> : <DeleteIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <ThemeProvider >\r\n                        <TextField\r\n                            className={classes.margin}\r\n                            label=\"Character\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            placeholder=\"What is the character's name?\"\r\n                            fullWidth\r\n                            multiline\r\n                            defaultValue={row.name}\r\n                        ></TextField>\r\n                    </ThemeProvider>\r\n                </TableCell>\r\n                <TableCell scope=\"row\"><ThemeProvider >\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        id=\"mui-theme-provider-outlined-input\"\r\n                        placeholder=\"This character is ...\"\r\n                        fullWidth\r\n                        multiline\r\n                        defaultValue={row.description}\r\n                    ></TextField>\r\n                </ThemeProvider></TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nCharacterSheetRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        onDelete: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nfunction KeyChallengeRow(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"delete row\" size=\"small\" onClick={() => row.onDelete(row)}>\r\n                        {open ? <DeleteIcon /> : <DeleteIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <ThemeProvider >\r\n                        <TextField\r\n                            className={classes.margin}\r\n                            label=\"Challenge\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            placeholder=\"What is the challenge name?\"\r\n                            fullWidth\r\n                            multiline\r\n                            defaultValue={row.name}\r\n                        ></TextField>\r\n                    </ThemeProvider>\r\n                </TableCell>\r\n                <TableCell scope=\"row\"><ThemeProvider >\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        id=\"mui-theme-provider-outlined-input\"\r\n                        placeholder=\"How is this a challenge to the player?\"\r\n                        fullWidth\r\n                        multiline\r\n                        defaultValue={row.description}\r\n                    ></TextField>\r\n                </ThemeProvider></TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nKeyChallengeRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        onDelete: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nfunction LevelsRow(props) {\r\n    const { row, setRow } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    \r\n    const handleInputChange = e => {\r\n        const {name, value} = e.target\r\n        setRow( prevRows => (prevRows.map((r1) => r1.id === row.id? {...r1, [name]: value}: r1 )\r\n        )\r\n      )  \r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"delete row\" size=\"small\" onClick={() => row.onDelete(row)}>\r\n                        {open ? <DeleteIcon /> : <DeleteIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <ThemeProvider >\r\n                        <TextField\r\n                            className={classes.margin}\r\n                            label=\"Level Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            placeholder=\"What is the level's name?\"\r\n                            fullWidth\r\n                            multiline\r\n                            name='name'\r\n                            defaultValue={row.name}\r\n                            onBlur={handleInputChange}\r\n                        ></TextField>\r\n                    </ThemeProvider>\r\n                </TableCell>\r\n                <TableCell scope=\"row\"><ThemeProvider >\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        id=\"mui-theme-provider-outlined-input\"\r\n                        placeholder=\"What is the level's description?\"\r\n                        fullWidth\r\n                        multiline\r\n                        name='description'\r\n                        defaultValue={row.description}\r\n                        onBlur={handleInputChange}\r\n                    ></TextField>\r\n                </ThemeProvider></TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nLevelsRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        onDelete: PropTypes.func.isRequired,\r\n        setFunction: PropTypes.func.isRequired,\r\n        rows: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction LevelMechanicsRow(props) {\r\n    const { level, setFunction, rows, mechanics } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('');\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setFunction( prevRows => (prevRows.map((r1) => r1.id === level.id? {...r1, [name]: value}: r1 )\r\n        )\r\n      )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <FormControl className={classes.margin}>\r\n                    <ThemeProvider >\r\n                        <TextField\r\n                            className={classes.margin}\r\n                            label=\"Level Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            fullWidth\r\n                            value={level.name}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                        ></TextField>\r\n                    </ThemeProvider>\r\n                    </FormControl>\r\n                </TableCell>\r\n                <TableCell scope=\"row\">\r\n                    <FormControl fullWidth maxWidth={1/3} multiline className={classes.margin}>\r\n                        <InputLabel htmlFor=\"selectMechanic\">Mechanics</InputLabel>\r\n                        <Select\r\n                            id=\"selectMechanic\"\r\n                            value={level.mechanics}\r\n                            multiple\r\n                            name='mechanics'\r\n                            onChange={handleChange}\r\n                            input={<Input id=\"select-multiple-chip\" />}\r\n                            renderValue={(selected) => (\r\n                                <div className={classes.chips}>\r\n                                    {selected.map((value) => (\r\n                                        <Chip key={value.id} label={value.name} className={classes.chip} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            MenuProps={{className: classes.menu}}\r\n                        >\r\n                            {mechanics.map((mechanic) => (\r\n                                <MenuItem  key={mechanic.id} value={mechanic} >\r\n                                    {mechanic.name}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </TableCell>\r\n                <TableCell scope=\"row\"><ThemeProvider >\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        id=\"mui-theme-provider-outlined-input\"\r\n                        placeholder=\"How are the mechanics used in this level?\"\r\n                        fullWidth\r\n                        multiline\r\n                        name='mechanicsDescription'\r\n                        onBlur={handleChange}\r\n                        defaultValue={level.mechanicsDescription}\r\n                    ></TextField>\r\n                </ThemeProvider></TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nLevelMechanicsRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        levelName: PropTypes.array.isRequired,\r\n        mechanics: PropTypes.array.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        onDelete: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n    mechanics: PropTypes.array.isRequired,\r\n};\r\n\r\n\r\nfunction MechanicsGameplayExperience(props) {\r\n    const { mechanic, setFunction, gameplayExperiences} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('');\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setFunction( prevRows => (prevRows.map((r1) => r1.id === mechanic.id? {...r1, [name]: value}: r1 )\r\n        )\r\n      )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <FormControl className={classes.margin}>\r\n                    <ThemeProvider >\r\n                        <TextField\r\n                            className={classes.margin}\r\n                            label=\"Mechanic Name\"\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            fullWidth\r\n                            value={mechanic.name}\r\n                            readOnly\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                        ></TextField>\r\n                    </ThemeProvider>\r\n                    </FormControl>\r\n                </TableCell>\r\n                <TableCell scope=\"row\">\r\n                    <FormControl fullWidth multiline className={classes.margin}>\r\n                        <InputLabel htmlFor=\"selectGameplayExperience\">Experience</InputLabel>\r\n                        <Select\r\n                            id=\"selectGameplayExperience\"\r\n                            value={mechanic.gameplayExperiences}\r\n                            multiple\r\n                            name='gameplayExperiences'\r\n                            onChange={handleChange}\r\n                            input={<Input id=\"select-multiple-chip\" />}\r\n                            renderValue={(selected) => (\r\n                                <div className={classes.chips}>\r\n                                    {selected.map((value) => (\r\n                                        <Chip key={value.id} label={value.aspect} className={classes.chip} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            MenuProps={MenuProps}\r\n                        >\r\n                            {gameplayExperiences.map((experience) => (\r\n                                <MenuItem  key={experience.id} value={experience} >\r\n                                    {experience.aspect}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </TableCell>\r\n                <TableCell scope=\"row\"><ThemeProvider >\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        id=\"mui-theme-provider-outlined-input\"\r\n                        placeholder=\"How are the mechanics used in this level?\"\r\n                        fullWidth\r\n                        multiline\r\n                        name='mechanicsDescription'\r\n                        onBlur={handleChange}\r\n                        defaultValue={mechanic.gameplayExperienceDescription}\r\n                    ></TextField>\r\n                </ThemeProvider></TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction GameplayExperienceQuestions(props) {\r\n    const { gameplayExperience, setFunction} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        setFunction( prevRows => (prevRows.map((r1) => r1.id === gameplayExperience.id? {...r1, [name]: value}: r1 ))) \r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <FormControl fullWidth className={classes.margin}>\r\n                    <ThemeProvider >\r\n                        <TextField\r\n                            className={classes.margin}\r\n                            label={gameplayExperience.aspect}\r\n                            variant=\"outlined\"\r\n                            id=\"mui-theme-provider-outlined-input\"\r\n                            fullWidth\r\n                            multiline\r\n                            value={gameplayExperience.question}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                        ></TextField>\r\n                    </ThemeProvider>\r\n                    </FormControl>\r\n                </TableCell>\r\n                <TableCell scope=\"row\">\r\n                    <FormControl fullWidth maxWidth={1/3} multiline className={classes.margin}>\r\n                        <InputLabel htmlFor=\"selectChoices\">Experiences</InputLabel>\r\n                        <Select\r\n                            id=\"selectChoices\"\r\n                            value={gameplayExperience.chosen}\r\n                            multiple\r\n                            multiline\r\n                            name='chosen'\r\n                            onChange={handleChange}\r\n                            style={{whiteSpace: 'normal'}}\r\n                            input={<Input id=\"select-multiple-chip\" />}\r\n                            renderValue={(selected) => (\r\n                                <div className={classes.chips}>\r\n                                    {selected.map((value) => (\r\n                                        <Chip key={value.id} label={<Typography style={{whiteSpace: 'normal'}}>{value}</Typography>} className={classes.chip}  style={{height:\"100%\"}}/>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            MenuProps={{className: classes.menu}}\r\n                        >\r\n                            {gameplayExperience.selections.map((experience) => (\r\n                                <MenuItem  key={gameplayExperience.id + experience} value={experience} >\r\n                                    {experience}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </TableCell>\r\n                <TableCell scope=\"row\"><ThemeProvider >\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        id=\"mui-theme-provider-outlined-input\"\r\n                        placeholder=\"Additional Details\"\r\n                        fullWidth\r\n                        multiline\r\n                        name='mechanicsDescription'\r\n                        onBlur={handleChange}\r\n                        defaultValue={gameplayExperience.description}\r\n                    ></TextField>\r\n                </ThemeProvider></TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default function Page() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [value, setValue] = React.useState(0);\r\n    const removeRow = (id, rows, setFunction) => {\r\n        var tempRows = [...rows];\r\n        const index = tempRows.indexOf(id);\r\n        if (index !== -1) {\r\n            tempRows.splice(index, 1);\r\n        }\r\n        setFunction([...rows])\r\n    };\r\n\r\n    const updateRow = (setRow) => {\r\n        setRow()\r\n    };\r\n    \r\n    const [mechanicsRows, setMechanicsRow] = React.useState([\r\n        {\r\n            id: 0,\r\n            name: \"\",\r\n            pre: '',\r\n            post: '',\r\n            gameplayExperiences: [],\r\n            gameplayExperienceDescription: \"\",\r\n            onDelete: function(){}\r\n        }\r\n    ])\r\n\r\n    const [rowID, setRowID] = React.useState(1)\r\n    const [characterRows, setCharacterRow] = React.useState([\r\n        {\r\n            id: 0,\r\n            name: \"\",\r\n            description: '',\r\n            onDelete: removeRow,\r\n        }\r\n    ]);\r\n\r\n    const [keyChallengeRows, setKeyChallengeRow] = React.useState([\r\n        {\r\n            id: 0,\r\n            name: \"\",\r\n            description: '',\r\n            onDelete: removeRow,\r\n        }\r\n    ]);\r\n    const [levelRows, setLevelRow] = React.useState([\r\n        {\r\n            id: 0,\r\n            name: \"\",\r\n            mechanics:[],\r\n            mechanicsDescription:\"\",\r\n            description: '',\r\n            onDelete: removeRow,\r\n        }\r\n    ]);\r\n    const [levelMechanicsRows, setLevelMechanicsRow] = React.useState([\r\n        {\r\n            id: 0,\r\n            levelName: {},\r\n            mechanicNames:{},\r\n            description: '',\r\n            onDelete: removeRow,\r\n        }\r\n    ]);\r\n\r\n    const [gameplayExperiences, setGameplayExperiences] = React.useState(\r\n        [\r\n            {\r\n                id: 0,\r\n                aspect: 'Key Moment Pacing',\r\n                question: 'In key moments of your game, the pacing should be:',\r\n                selections: [\r\n                    'Fast and frantic',\r\n                    'Slow and deliberate',\r\n                    'Relaxed and carefree',\r\n                    'In a state of flow',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 1,\r\n                aspect: 'Player Goal',\r\n                question: 'The goal of the player is to:',\r\n                selections: [\r\n                    'Reach a certain place',\r\n                    'Reach a certain score',\r\n                    'Explore a certain area',\r\n                    'Remove certain objects',\r\n                    'Move certain objects',\r\n                    'Survive',\r\n                    'Sandbox',\r\n                    'Other ',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 2,\r\n                aspect: 'Challenge',\r\n                question: 'What makes attaining the goal challenging:',\r\n                selections: [\r\n                    'It isn’t',\r\n                    'Thinking outside the box',\r\n                    'Thinking Quickly',\r\n                    'Critical thinking',\r\n                    'Dexterity or timing of interactions',\r\n                    'Need for collaboration',\r\n                    'Competition with others',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 3,\r\n                aspect: 'Player Reward',\r\n                question: 'How is the player rewarded during play:',\r\n                selections: [\r\n                    'Satisfaction of overcoming challenges',\r\n                    'Sustenance',\r\n                    'Location progression',\r\n                    'Interaction progression',\r\n                    'Narrative progression',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 4,\r\n                aspect: 'Player Failure',\r\n                question: 'How does the player fail:',\r\n                selections: [\r\n                    'The player cannot fail',\r\n                    'The player runs out of time',\r\n                    'The player runs out of a resource ',\r\n                    'The player cannot perform a meaningful action',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 5,\r\n                aspect: 'Failure Consequences',\r\n                question: 'What happens if the player fails:',\r\n                selections: [\r\n                    'The player loses progression',\r\n                    'The player loses sustenance',\r\n                    'The narrative changes',\r\n                    'Nothing',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 6,\r\n                aspect: 'Experience Focus',\r\n                question: 'What is the focus for the player experience:',\r\n                selections: [\r\n                    'Exploration',\r\n                    'Combat',\r\n                    'Puzzle-solving',\r\n                    'Character interaction',\r\n                    'Narrative',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 7,\r\n                aspect: 'Time Flow',\r\n                question: 'How does time flow in the game:',\r\n                selections: [\r\n                    'Discreetly',\r\n                    'Continuously',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            },\r\n            {\r\n                id: 8,\r\n                aspect: 'Avatar Control',\r\n                question: 'Does the player have control of an in-game avatar:',\r\n                selections: [\r\n                    'No',\r\n                    'Yes',\r\n                    'Varies',\r\n                    'Multiple',\r\n                    'Other',\r\n                    'I don’t know'\r\n                ],\r\n                description: '',\r\n                chosen:[],\r\n                onDelete: removeRow,\r\n            }\r\n        \r\n    ]);\r\n    \r\n    const addRow = (oldRows, newRow, setFunction) => {\r\n        setRowID(rowID => rowID + 1)\r\n        setFunction(oldRows => [\r\n            ...oldRows,\r\n            newRow\r\n        ])\r\n    };\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    var state =\r\n        {\r\n            image1 : '',\r\n            image2: '',\r\n            title:'',\r\n            genre:'',\r\n            targetPlatform:'',\r\n            topic:'',\r\n            theme:'',\r\n            goal:'',\r\n            mainCharacters:'',\r\n            gameplayFlow:'',\r\n            playerCharacter:'',\r\n            playerActions:'',\r\n            uniqueness:'',\r\n            importantScene:'',\r\n            fictionalElements:'',\r\n            backgroundStory:'',\r\n            majorCharacters: characterRows,\r\n            finishthegame:'',\r\n            keyChallenges: keyChallengeRows,\r\n            fictionalAdvancement:'',\r\n            levels: levelRows,\r\n            gameMechanics: mechanicsRows,\r\n            gameplayeEXP: gameplayExperiences,\r\n            playerExperience:'',\r\n            educationalGoal:'',\r\n            audience: '',\r\n            platformAndTools:''\r\n        }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <AppBar position=\"static\">\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableRow>\r\n                            <TableCell>\r\n                        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                            <Tab label=\"Design Document\" {...a11yProps(0)} />\r\n                            <Tab label=\"Rubric And Policies\" {...a11yProps(1)} />\r\n                        </Tabs>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"stretch\">\r\n                        <ThemeProvider >\r\n                                <TextField\r\n                                    className={classes.margin}\r\n                                    label=\"File Name\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"File Name\"\r\n                                />\r\n                        </ThemeProvider>\r\n                        <ThemeProvider >\r\n                               <Button>Save</Button>\r\n                               <Button>Load</Button>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                    </TableCell>\r\n                    </TableRow>                             \r\n                    </Table>\r\n                    </AppBar>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <Divider />\r\n                <NestedList></NestedList>\r\n                <Divider />\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <TabPanel value={value} index={0}>\r\n                        <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>The Design Document</Typography>\r\n                        <ThemeProvider >\r\n                            <TextField\r\n                                className={classes.margin}\r\n                                label=\"Group Name\"\r\n                                variant=\"filled\"\r\n                                id=\"mui-theme-provider-outlined-input\"\r\n                                placeholder=\"What is your group's name\"\r\n                                fullWidth\r\n                                alignItems=\"center\"\r\n                            />\r\n                        </ThemeProvider>\r\n                        <br/>\r\n                        <br/>\r\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    className={classes.margin}\r\n                                    label=\"Group Member 1\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"Name,\r\nUnity ID\"\r\n                                />\r\n                            </ThemeProvider>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    className={classes.margin}\r\n                                    label=\"Group Member 2\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"Name,\r\nUnity ID\"\r\n                                />\r\n                            </ThemeProvider>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    className={classes.margin}\r\n                                    label=\"Group Member 3\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"Name,\r\nUnity ID\"\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Grid>\r\n                        <br />\r\n\r\n\r\n\r\n\r\n                        <Typography variant=\"h5\" gutterBottom>Representative Image from the game</Typography>\r\n                        <Container>\r\n                            Provide an initial impression of the visual qualities of the game. This can be a character, scene or item. This could be an image that inspires your art theme or an image from your topic/installation that illustrates the theme\r\n                            <br />\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Upload Image\r\n                            </Button>\r\n                        </Container>\r\n                        <br />\r\n\r\n                        <Typography variant=\"h5\" gutterBottom>(Optional) More Representative Images from the game</Typography>\r\n                        <Container>\r\n                            Same as above\r\n                            <br />\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Upload Image\r\n                            </Button>\r\n                        </Container>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Typography variant=\"h3\" gutterBottom>Executive Summary</Typography>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Provide the name of your game</Typography>\r\n                            <Grid container direction=\"row\" spacing={3} justify=\"flex-start\" alignItems=\"center\" style={{ border: '1px solid' }}>\r\n                                <Grid item >\r\n                                    <Typography variant=\"h6\" >\r\n                                        Title\r\n                                    </Typography></Grid>\r\n                                <Grid item xs style={{ borderLeft: '1px solid' }}>\r\n                                    <ThemeProvider >\r\n                                        <TextField\r\n                                            className={classes.margin}\r\n                                            label=\"Title\"\r\n                                            variant=\"outlined\"\r\n                                            id=\"mui-theme-provider-outlined-input\"\r\n                                            placeholder=\"Add title\"\r\n                                            fullWidth\r\n                                        />\r\n                                    </ThemeProvider> </Grid>\r\n                            </Grid>\r\n                            <br />\r\n                            <Typography variant=\"h5\" gutterBottom>Define the Game’s Premise</Typography>\r\n                            <Typography gutterBottom>Summarize the premise of the game as you would explain it to a person who has never played it before. Try to use no more than 30 words.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Define the Premise\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game’s premise is ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n\r\n\r\n                            <Typography variant=\"h5\" gutterBottom>Provide the game’s genre and target platform.</Typography>\r\n                            <Table className={classes.table}>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <Typography variant=\"h6\" >\r\n                                            Genre\r\n                                    </Typography></TableCell>\r\n                                    <TableCell style={{ borderLeft: '1px solid' }} xs>\r\n                                        <ThemeProvider >\r\n                                            <TextField\r\n                                                className={classes.margin}\r\n                                                label=\"Genre\"\r\n                                                variant=\"outlined\"\r\n                                                id=\"mui-theme-provider-outlined-input\"\r\n                                                placeholder=\"The genre is ...\"\r\n                                                fullWidth\r\n                                            />\r\n                                        </ThemeProvider> </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell >\r\n                                        <Typography variant=\"h6\" >\r\n                                            Target Platform\r\n                                    </Typography></TableCell>\r\n                                    <TableCell style={{ borderLeft: '1px solid' }} xs width=\"100%\">\r\n                                        <ThemeProvider >\r\n                                            <TextField\r\n                                                className={classes.margin}\r\n                                                label=\"Title\"\r\n                                                variant=\"outlined\"\r\n                                                id=\"mui-theme-provider-outlined-input\"\r\n                                                placeholder=\"The target platform is ...\"\r\n                                                fullWidth\r\n                                            />\r\n                                        </ThemeProvider> </TableCell>\r\n                                </TableRow>\r\n                            </Table>\r\n                        </Container>\r\n                        <br />\r\n                        <br />\r\n                        <Typography variant=\"h4\" gutterBottom>Theme</Typography>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Topic</Typography>\r\n                            <Typography gutterBottom>What is the topic of your game?\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Topic\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game’s topic is ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                            <br />\r\n                            <Typography variant=\"h5\" gutterBottom>Class Theme</Typography>\r\n                            <Typography gutterBottom>How does the topic of your game address the class’ theme?\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Class Theme\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game’s topic addresses the class’ theme ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n\r\n                        <br />\r\n                        <br />\r\n                        <Typography variant=\"h4\" gutterBottom>Key Points</Typography>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Goal</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence what the main goal of the game is.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Goal\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game’s goal is ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Main characters</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence the main non-player characters. Optional: include sample artwork.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Main characters\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The characters included are ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Gameplay flow</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence the flow of the game.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Gameplay flow\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game progresses by ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Player Character</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence the main character of the game. Optional: include sample artwork.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Player Character\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The player character is ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Player actions</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence the actions the player can take in the game.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Player actions\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The player can perform ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Uniqueness</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence the elements of the game which set it apart from existing games in the same genre.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Uniqueness\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game is unique because ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Important scene</Typography>\r\n                            <Typography gutterBottom> Describe in a sentence an important scene from the game. Optional: include sample artwork.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Important scene\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"An important scene from the game ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Fictional elements</Typography>\r\n                            <Typography gutterBottom> Provide the primary fictional elements your game employs.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Fictional elements\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The fictional elements included ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Typography variant=\"h3\" gutterBottom>Game Description</Typography>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Background story</Typography>\r\n                            <Typography gutterBottom> Provide a detailed description of the fictional background of the game. This should include the plot and setting\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Background story\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The game’s plot is ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Major Characters</Typography>\r\n                            <Typography gutterBottom> Describe the major characters in your game, giving detail in what they do and why they exist in the game. Add additional rows to the table to accommodate the characters your game requires.\r\n                            </Typography>\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"collapsible table\">\r\n                                    <TableHead>\r\n                                        <TableCell width=\"10%\"> </TableCell>\r\n                                        <TableCell width=\"40%\" align='left'>Character</TableCell>\r\n                                        <TableCell width=\"50%\">Description</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {characterRows.map((row) => (\r\n                                            <CharacterSheetRow key={row.id} row={row} rows={characterRows} setFunction={setCharacterRow} />\r\n                                        ))}\r\n                                        <TableRow>\r\n                                            <TableCell />\r\n                                            <TableCell>\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => addRow(characterRows, {\r\n                                                    id: rowID,\r\n                                                    name: \"\",\r\n                                                    description: \"\",\r\n                                                    onDelete: removeRow\r\n                                                }, setCharacterRow)}>Add Character</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Finishing the game</Typography>\r\n                            <Typography gutterBottom> Provide a detailed description of how the player wins the game.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Finishing the game\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The player wins by ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Key Challenges</Typography>\r\n                            <Typography gutterBottom> Describe the challenges you expect the player to overcome in the game.\r\n                            </Typography>\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"collapsible table\">\r\n                                    <TableHead>\r\n                                        <TableCell width=\"10%\"> </TableCell>\r\n                                        <TableCell width=\"30%\" align='left'>Challenge</TableCell>\r\n                                        <TableCell width=\"60%\">Description</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {keyChallengeRows.map((row) => (\r\n                                            <KeyChallengeRow key={row.id} row={row} setFunction={setKeyChallengeRow}/>\r\n                                        ))}\r\n                                        <TableRow>\r\n                                            <TableCell />\r\n                                            <TableCell>\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => addRow(keyChallengeRows, {\r\n                                                    id: rowID,\r\n                                                    name: \"\",\r\n                                                    description: \"\",\r\n                                                    onDelete: removeRow\r\n                                                }, setKeyChallengeRow)}>Add Challenge</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Fictional aspect advancement (if applicable)</Typography>\r\n                            <Typography gutterBottom> Describe how you intend the player to advance the fictional aspects, if possible.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Advancement\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"The fictional aspects are advanced by ...\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Levels (If Applicable)</Typography>\r\n                            <Typography gutterBottom> Describe, if applicable, the game’s levels.\r\n                            </Typography>\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"collapsible table\">\r\n                                    <TableHead>\r\n                                        <TableCell width=\"10%\"> </TableCell>\r\n                                        <TableCell width=\"30%\" align='left'>Level</TableCell>\r\n                                        <TableCell width=\"60%\">Description</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {levelRows.map((row) => (\r\n                                            <LevelsRow key={row.id} row={row} setRow={setLevelRow} />\r\n                                        ))}\r\n                                        <TableRow>\r\n                                            <TableCell />\r\n                                            <TableCell>\r\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => addRow(levelRows, {\r\n                                                    id: rowID,\r\n                                                    name: \"\",\r\n                                                    mechanics:[],\r\n                                                    mechanicsDescription:\"\",\r\n                                                    description: \"\",\r\n                                                    onDelete: removeRow\r\n                                                }, setLevelRow)}>Add Level</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Game Mechanics</Typography>\r\n                            <MechanicsTable rows={mechanicsRows} setRow={setMechanicsRow}></MechanicsTable>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Level mechanics (if applicable)</Typography>\r\n                            <Typography gutterBottom> Describe, if applicable, which game mechanics are used in each level.\r\n                            </Typography>\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"collapsible table\">\r\n                                    <TableHead>\r\n                                        <TableCell width=\"33%\" align='left'>Level</TableCell>\r\n                                        <TableCell width=\"33%\">Mechanic</TableCell>\r\n                                        <TableCell width=\"33%\">Description</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {levelRows.map((level) => (\r\n                                            <LevelMechanicsRow key={level.id} level={level} setFunction={setLevelRow} rows={levelMechanicsRows} mechanics={mechanicsRows} />\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Container>\r\n\r\n                        <Typography variant=\"h3\" gutterBottom>Design Goals</Typography>\r\n\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Player Experience</Typography>\r\n                            \r\n                            <TableContainer id=\"questionsAboutGameplay\" className={classes.thisisaclass} component={Paper}>\r\n                                <Table aria-label=\"collapsible table\">\r\n                                    <TableHead>\r\n                                        <TableCell width=\"33%\" maxWidth={1/3} align='left'>Aspect</TableCell>\r\n                                        <TableCell width=\"33%\" maxWidth={1/3}>Experiences</TableCell>\r\n                                        <TableCell width=\"33%\" maxWidth={1/3}>Description</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {gameplayExperiences.map((experience) => (\r\n                                            <GameplayExperienceQuestions key={experience.id} gameplayExperience={experience} setFunction={setGameplayExperiences}/>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <Typography gutterBottom> Describe the ideal player experience for your game.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Experience\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"What is the ideal player experience?\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Gameplay Experience</Typography>\r\n                            <Typography gutterBottom> Describe how you expect your mechanics to affect gameplay experience for the player.\r\n                            </Typography>\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"collapsible table\">\r\n                                    <TableHead>\r\n                                        <TableCell width=\"33%\" maxWidth={1/3} align='left'>Level</TableCell>\r\n                                        <TableCell width=\"33%\" maxWidth={1/3}>Mechanic</TableCell>\r\n                                        <TableCell width=\"33%\" maxWidth={1/3}>Description</TableCell>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        { console.log(state),\r\n                                        mechanicsRows.map((mechanic) => (\r\n                                            <MechanicsGameplayExperience key={mechanic.id} mechanic={mechanic} setFunction={setMechanicsRow} gameplayExperiences={gameplayExperiences}/>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Container>\r\n\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Educational Goal (if applicable)</Typography>\r\n                            <Typography gutterBottom> If the game has an educational goal, provide justification that the design facilitates that education goal.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Education\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"How and why does the design facilitate the educational goal?\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Specific audience (if applicable)</Typography>\r\n                            <Typography gutterBottom> If the game targets a specific audience, describe what about the game or mechanics target that specific audience.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Audience\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"Who does this design target?\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n\r\n                        <Typography variant=\"h3\" gutterBottom>Platform and Tool Justification</Typography>\r\n\r\n                        <Container>\r\n                            <Typography variant=\"h5\" gutterBottom>Platform and Tools</Typography>\r\n                            <Typography gutterBottom> Justify your choice of platform and tools. Justification contains information such as support for the type of game that you are designing in terms of examples or availability of tutorials for games similar to yours.\r\n                            </Typography>\r\n                            <ThemeProvider >\r\n                                <TextField\r\n                                    label=\"Platform and Tools\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"mui-theme-provider-outlined-input\"\r\n                                    placeholder=\"Why did you choose the platform and tools?\"\r\n                                    fullWidth\r\n                                    multiline\r\n                                />\r\n                            </ThemeProvider>\r\n                        </Container>\r\n\r\n                    </TabPanel>\r\n                    <TabPanel id=\"rubricHideMe\" value={value} index={1}>\r\n                        <Typography variant=\"h3\" gutterBottom>Policy on Artwork</Typography>\r\n                        <Typography gutterBottom>Note that we expect all artwork used in the game to be either original, or have license terms that permit non-commercial use. Any artwork that is not properly attributed to external sources (non-team members) will be considered original art. If we find that external sources are used without attribution and permission then we will consider it as a case of plagiarism.  </Typography>\r\n                        <Typography variant=\"h3\" gutterBottom>Deliverables</Typography>\r\n                        <Typography gutterBottom>As a group, you will submit a single file in Word or PDF format. </Typography>\r\n                        <Typography variant=\"h3\" gutterBottom>Grading Rubric</Typography>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell width=\"5%\" maxWidth={1/20}>\r\n                                        Grade\r\n                                    </TableCell>\r\n                                    <TableCell width=\"95%\" maxWidth={19/20}>\r\n                                        Criteria\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <Typography>A+</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Typography>Your document meets all the requirements for an A and goes above and beyond,  as judged by the instructor.</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    <Typography>A</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Typography>Design of the game is innovative in the selection of topic, relation to the theme, and is properly scoped for the submission deadline for the final submission of the project. Includes original and well thought-out references to the culture surrounding the theme. Includes all requested information in the correct format and sufficient detail. Provides references to artwork and all other content sources. Includes excellent justification with examples or clear links to resources available for the platform of choice.</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    <Typography>B</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Typography>Design of the game is compelling and the selection of topic, relation to the theme, and scope is clearly indicated. Includes appropriate references and inspirations. Includes all requested information in the correct format and sufficient detail. Provides references to all content.</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    <Typography>C</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Typography>Design of the game is clearly presented in terms of selection of topic, relation to the theme is clearly stated, game is properly scoped. Includes almost all the information and is in correct format. Provides references to all external content.</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    <Typography>D</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Typography>Lacks detail and doesn't clearly communicate design, connection to theme, and scope. References to theme are not well documented. Document is not in the correct format.</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                    <Typography>F</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Typography>Not related to theme. Lacks details of design. Does not follow format.</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        \r\n                    </TabPanel>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Page from './Page';\n\nfunction App() {\n  return (\n    <Page ></Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Page from './Page' \nimport Select from '@material-ui/core/Select';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n    },\n    overrides:{\n    MuiSelect: {\n      selectMenu:{\n        whiteSpace: 'normal',\n      },\n    },\n  },\n  });\n\nvar element = React.createElement('h1', { className: 'greeting' }, 'Hello, world!');\nReactDOM.render(<ThemeProvider theme={theme}> <Page></Page> </ThemeProvider>, document.getElementById('root'));\n"],"sourceRoot":""}